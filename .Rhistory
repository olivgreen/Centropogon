install.packages("ggfortify")
knitr::opts_chunk$set(echo = TRUE)
library(ggfortify)
library(ggplot2)
str(iris)
str(iris)
head(iris)
iris.pca <- prcomp(iris[,c(1:4)],
center = TRUE,
scale. = TRUE)
summary(iris.pca)
iris.pca <- prcomp(iris[,c(1:4)],
center = TRUE,
scale. = TRUE)
summary(iris.pca)
# structure of the pca object
str(iris.pca)
iris.pca.plot <- autoplot(iris.pca,
data = iris,
colour = 'Species')
iris.pca.plot
biplot.iris.pca <- biplot(iris.pca)
biplot.iris.pca
plot.iris.pca <- plot(iris.pca, type="1")
getwd()
setwd("C:/Users/odegr/OneDrive - Louisiana State University/undergrad research/R stats/data")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("tidyverse")
install.packages("psych")
library(dplyr)
library(ggplot2)
library(tidyverse)
library(psych)
floral_data <- read.csv("floral_data.csv", na.strings=c("N/A"))
#see if data loaded
head(floral_data)
#What is the type of each variable?
unlist(lapply(floral_data, class))
#convert variables that are listed as characters to numeric (except species name) so we can get the stats for all variables
floral_data <- floral_data %>%
mutate_at(vars(-scientificName), as.numeric)
#converts data into tibble data frame for easier analysis
my_data <- as_tibble(floral_data)
my_data
#counts the number of measurements for each species (we may have to think this thru a bit)
my_data %>%
group_by(scientificName) %>%
summarise(
count = n()
) %>%
print(n = 42)
#summarizes the mean of each trait for each species
summary_data <- my_data %>%
group_by(scientificName) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
summary_data
# Save the summarized means data to a CSV file
write.csv(summary_data, "summary_data.csv", row.names = FALSE)
library(psych)
describeBy(
floral_data,
group = floral_data$scientificName # grouping variable
)
plot(floral_data$corolla_base_cm, floral_data$flower_len_cm)
plot(floral_data$flower_len_cm, floral_data$corolla_base_cm)
#scatterplots are even more informative when differentiating the points according to a factor, in this case the species
ggplot(floral_data) +
aes(x = flower_len_cm, y = corolla_base_cm, colour = scientificName) +
geom_point() +
scale_color_hue()
View(summary_data)
# Load libraries
library(dplyr)
library(ggplot2)
library(tidyverse)
library(psych)
setwd("C:/Users/odegr/OneDrive - Louisiana State University/undergrad research/R stats/data")
# Read the data from CSV file
floral_data <- read.csv("floral_data.csv", na.strings=c("N/A"))
#see if data loaded
head(floral_data)
#What is the type of each variable?
unlist(lapply(floral_data, class))
#convert variables that are listed as characters to numeric (except species name) so we can get the stats for all variables
floral_data <- floral_data %>%
mutate_at(vars(-scientificName), as.numeric)
#converts data into tibble data frame for easier analysis
my_data <- as_tibble(floral_data)
my_data
#counts the number of measurements for each species (we may have to think this thru a bit)
my_data %>%
group_by(scientificName) %>%
summarise(
count = n()
) %>%
print(n = 42)
#summarizes the mean of each trait for each species
summary_data <- my_data %>%
group_by(scientificName) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
summary_data
# Save the summarized means data to a CSV file
write.csv(summary_data, "summary_data.csv", row.names = FALSE)
library(psych)
describeBy(
floral_data,
group = floral_data$scientificName # grouping variable
)
plot(floral_data$corolla_base_cm, floral_data$flower_len_cm)
plot(floral_data$flower_len_cm, floral_data$corolla_base_cm)
plot(floral_data$stamen_ex_cm, floral_data$flower_len_cm)
setwd("C:/Users/odegr/OneDrive - Louisiana State University/undergrad research/R stats/data")
# Read the data from CSV file
floral_data <- read.csv("floral_data.csv", na.strings=c("N/A"))
#see if data loaded
head(floral_data)
#What is the type of each variable?
unlist(lapply(floral_data, class))
#convert variables that are listed as characters to numeric (except species name) so we can get the stats for all variables
floral_data <- floral_data %>%
mutate_at(vars(-scientificName), as.numeric)
#converts data into tibble data frame for easier analysis
my_data <- as_tibble(floral_data)
my_data
#counts the number of measurements for each species (we may have to think this thru a bit)
my_data %>%
group_by(scientificName) %>%
summarise(
count = n()
) %>%
print(n = 42)
#summarizes the mean of each trait for each species
summary_data <- my_data %>%
group_by(scientificName) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
summary_data
# Save the summarized means data to a CSV file
write.csv(summary_data, "summary_data.csv", row.names = FALSE)
library(psych)
describeBy(
floral_data,
group = floral_data$scientificName # grouping variable
)
plot(floral_data$corolla_base_cm, floral_data$flower_len_cm)
plot(floral_data$flower_len_cm, floral_data$corolla_base_cm)
plot(floral_data$stamen_ex_cm, floral_data$flower_len_cm)
plot(floral_data$anther_len_cm, floral_data$flower_len_cm)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(psych)
setwd("C:/Users/odegr/OneDrive - Louisiana State University/undergrad research/R stats/data")
# Read the data from CSV file
centro_data <- read.csv("centro_rat_log.csv", na.strings=c("N/A"))
#see if data loaded
head(centro_data)
#What is the type of each variable?
unlist(lapply(centro_data, class))
#convert variables that are listed as characters to numeric (except species name) so we can get the stats for all variables
centro_data <- centro_data %>%
mutate_at(vars(-scientificName), as.numeric)
#converts data into tibble data frame for easier analysis
my_data <- as_tibble(centro_data)
my_data
#counts the number of measurements for each species (we may have to think this thru a bit)
my_data %>%
group_by(scientificName) %>%
summarise(
count = n()
) %>%
print(n = 42)
#summarizes the mean of each trait for each species
summary_data <- my_data %>%
group_by(scientificName) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
summary_data
# Save the summarized means data to a CSV file
write.csv(summary_data, "summary_data.csv", row.names = FALSE)
#converts data into tibble data frame for easier analysis
my_data <- as_tibble(centro_data)
my_data
library(psych)
describeBy(
floral_data,
group = floral_data$scientificName # grouping variable
)
plot(floral_data$corolla_base_cm, floral_data$flower_len_cm)
plot(centro_data$corolla_base_cm, centro_data$flower_len_cm)
plot(centro_data$flower_len_cm, centro_data$corolla_base_cm)
plot(centro_data$anther_len_cm, centro_data$flower_len_cm)
#scatterplots are even more informative when differentiating the points according to a factor, in this case the species
ggplot(centro_data) +
aes(x = flower_len_cm, y = corolla_base_cm, colour = scientificName) +
geom_point() +
scale_color_hue()
ggplot(centro_data) +
aes(x = flower_len_cm, y = base_apex_ratio, colour = scientificName) +
geom_point() +
scale_color_hue()
ggplot(centro_data) +
aes(x = base_apex_ratio, y = flower_len_cm, colour = scientificName) +
geom_point() +
scale_color_hue()
ggplot(centro_data) +
aes(x = base_apex_ratio, y = flower_len_cm, colour = scientificName) +
geom_point() +
scale_color_hue() +
theme(legend.key.size = unit(1, 'cm'),
legend.title = element_text(size=14))
ggplot(centro_data) +
aes(x = base_apex_ratio, y = flower_len_cm, colour = scientificName) +
geom_point() +
scale_color_hue() +
theme(legend.key.size = unit(1, 'mm'),
legend.title = element_text(size=14))
ggplot(centro_data) +
aes(x = base_apex_ratio, y = flower_len_cm, colour = scientificName) +
geom_point() +
scale_color_hue() +
theme(legend.key.size = unit(0.01, 'mm'),
legend.title = element_text(size=14))
ggplot(centro_data) +
aes(x = leaf_len_width_ratio, y = leaf_area_cm2, colour = scientificName) +
geom_point() +
scale_color_hue() +
theme(legend.key.size = unit(0.01, 'mm'),
legend.title = element_text(size=14))
# Read the data from CSV file
centro_data <- read.csv("complete_centro.csv", na.strings=c("N/A"))
